# 회귀분석 ANOVA

rm(list=ls())

setwd("~/R Programming/Harvard/Rstatistics")
getwd() # where am I?
list.files("dataSets") # files in the dataSets folder

# read the states data
states.data <- readRDS("dataSets/states.rds") 
#get labels
states.info <- data.frame(attributes(states.data)[c("names", "var.labels")])
#look at last few labels
tail(states.info, 8)

# summary of expense and csat columns, all rows
sts.ex.sat <- subset(states.data, select = c("expense", "csat"))
summary(sts.ex.sat)
# correlation between expense and csat
cor(sts.ex.sat) 

# scatter plot of expense vs csat
plot(sts.ex.sat)

# Fit our regression model
# sat.mod <- lm(csat ~ expense, # regression formula data=states.data) # data set
# Summarize and print the results
# summary(sat.mod) # show regression coefficients table

summary(lm(csat ~ expense + percent, data = states.data))

class(sat.mod)
names(sat.mod)
methods(class = class(sat.mod))[1:9]

confint(sat.mod)
# hist(residuals(sat.mod))

par(mar = c(4, 4, 2, 2), mfrow = c(1, 2)) #optional
plot(sat.mod, which = c(1, 2)) # "which" argument optional

# fit another model, adding house and senate as predictors
sat.voting.mod <-  lm(csat ~ expense + house + senate,
                      data = na.omit(states.data))
sat.mod <- update(sat.mod, data=na.omit(states.data))
# compare using the anova() function
anova(sat.mod, sat.voting.mod)
coef(summary(sat.voting.mod))

#Add the interaction to the model
sat.expense.by.percent <- lm(csat ~ expense*income, data=states.data) 
#Show the results
coef(summary(sat.expense.by.percent)) # show regression coefficients table

# make sure R knows region is categorical
str(states.data$region)
states.data$region <- factor(states.data$region)
#Add region to the model
sat.region <- lm(csat ~ region, data=states.data) 
#Show the results
coef(summary(sat.region)) # show regression coefficients table
anova(sat.region) # show ANOVA table

# print default contrasts
contrasts(states.data$region)
# change the reference group
coef(summary(lm(csat ~ C(region, base=4), data=states.data)))
# change the coding scheme
coef(summary(lm(csat ~ C(region, contr.helmert),data=states.data)))

#################################################################################
### Exercises
### The National Health Interview Survey (NHIS) has monitored the health of the nation since 1957. 
### NHIS data on a broad range of health topics are collected through personal household interviews. 
### For over 50 years, the U.S. Census Bureau has been the data collection agent for the National 
### Health Interview Survey. Survey results have been instrumental in providing data to track health status, 
### health care access, and progress toward achieving national health objectives.
###
#################################################################################

rm(list=ls())

NH11 <- readRDS("dataSets/NatHealth2011.rds")
labs <- attributes(NH11)$labels

str(NH11$hypev) # check stucture of hypev
levels(NH11$hypev) # check levels of hypev
# collapse all missing values to NA
NH11$hypev <- factor(NH11$hypev, levels=c("2 No", "1 Yes"))
# run our regression model
hyp.out <- glm(hypev~age_p+sex+sleep+bmi,
               data=NH11, family="binomial")
coef(summary(hyp.out))

# Logistic regression coefficients

plot(hyp.out)

hyp.out.tab <- coef(summary(hyp.out))
hyp.out.tab[, "Estimate"] <- exp(coef(hyp.out))
hyp.out.tab

# Create a dataset with predictors set at desired levels
predDat <- with(NH11,
                expand.grid(age_p = c(33, 63),
                            sex = "2 Female",
                            bmi = mean(bmi, na.rm = TRUE),
                            sleep = mean(sleep, na.rm = TRUE)))
# predict hypertension at those levels
cbind(predDat, predict(hyp.out, type = "response",
                       se.fit = TRUE, interval="confidence",
                       newdata = predDat))

library(effects)
plot(allEffects(hyp.out))

# install.packages("lme4")
library(lme4)
Exam <- readRDS("dataSets/Exam.rds")

# null model, grouping by school but not fixed effects.
Norm1 <-lmer(normexam ~ 1 + (1|school),
             data=Exam, REML = FALSE)
summary(Norm1)

Exam <- readRDS("dataSets/Exam.rds")

Norm2 <-lmer(normexam~standLRT + (1|school),
             data=Exam,
             REML = FALSE) 
summary(Norm2) 

# anova(Norm1, Norm2)

Norm3 <- lmer(normexam~standLRT + (standLRT|school), data=Exam,
              REML = FALSE) 
summary(Norm3) 

anova(Norm2, Norm3) 

########################################
# Exercise 3: multilevel modeling
########################################

rm(list=ls())

states <- readRDS("dataSets/states.rds")

states.en.met <- subset(states, select = c("metro", "energy"))
summary(states.en.met)
plot(states.en.met)
cor(states.en.met, use="pairwise")

mod.en.met <- lm(energy ~ metro, data = states)
summary(mod.en.met)

states.en.met.pop.wst <- subset(states, select = c("energy", "metro", "pop", "waste"))
summary(states.en.met.pop.wst)
plot(states.en.met.pop.wst)
cor(states.en.met.pop.wst, use = "pairwise")
mod.en.met.pop.waste <- lm(energy ~ metro + pop + waste, data = states)
summary(mod.en.met.pop.waste)
anova(mod.en.met, mod.en.met.pop.waste)


## Exercise 1

mod.en.metro.by.waste <- lm(energy ~ metro * waste, data = states)

mod.en.region <- lm(energy ~ metro * waste + region, data = states)
anova(mod.en.region)

## Exercise 2

nh11.wrk.age.mar <- subset(NH11, select = c("everwrk", "age_p", "r_maritl"))
summary(nh11.wrk.age.mar)
NH11 <- transform(NH11,
                  everwrk = factor(everwrk,
                                   levels = c("1 Yes", "2 No")),
                  r_maritl = droplevels(r_maritl))

mod.wk.age.mar <- glm(everwrk ~ age_p + r_maritl, data = NH11,
                      family = "binomial")

summary(mod.wk.age.mar)

library(effects)
data.frame(Effect("r_maritl", mod.wk.age.mar))


